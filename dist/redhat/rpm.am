#
# Copyright (c) 2020, 2021, 2023 Humanitarian OpenStreetMap Team
#
# This file is part of Underpass.
#
#     Underpass is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     Underpass is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with Underpass.  If not, see <https://www.gnu.org/licenses/>.

RPMBUILD_DIR = $(abs_top_builddir)/rpmbuild
RPMMACROS = $(RPMBUILD_DIR)/.rpmmacros
RPMSPEC = $(RPMBUILD_DIR)/SPECS/underpass.spec
RPMBUILD_FLAGS = --macros=/usr/lib/rpm/macros:$(RPMMACROS) # --clean --rmsource --rmspec

underpass.spec spec: redhat/underpass.spec
	$(MKDIR_P) $(RPMBUILD_DIR)/SPECS
	$(MKDIR_P) $(RPMBUILD_DIR)
	echo "%_topdir $(RPMBUILD_DIR)" > $(RPMMACROS)
	distro=`lsb_release -is`; \
	echo "Editing the version in the spec file to be $${snapshot_version} $${snapshot_release} for Distribution $${distro}..."; \
	sed -e "s/Version.*/Version:	$(BRANCH_COMMIT)/" \
	    -e "s/Release.*/Release:	$(VERSION)/" \
	    -e "s/Source.*/Source:	$(PACKAGE)-$(BRANCH_COMMIT).tar.gz/" \
	    -e "s/Distribution:.*/Distribution:   $${distro}/" redhat/underpass.spec > $(RPMSPEC)

# Build an Redhat/Fedora .rpm package
# We do this by using the source snapshot that we know is 'distclean'.
# After copying the source tarball to where rpmbuild expects it,
# we can then build the binary package.
# older versions of Fedora used /usr/src/redhat/{SOURCES, BUILD} for
# everything, but the newer version appears to use one's home directory
# instead, so now you don't have to be root to build rpm packages.

# Do the entire process to build an RPM package
rpm: distdir spec rpm-setup rpm-underpass

# build everything in one pass using rpmbuild. This was using
# --sign underpass.spec, but it didn't work for the automated builds.
rpm-underpass: 
	rpmbuild -ba $(RPMBUILD_FLAGS) $(RPMSPEC)

# configure the build directory, which we do by executing only the %prep stage,
# which doesn't actually run configure
rpm-configure: 
	rpmbuild --noprep -bp $(RPMBUILD_FLAGS) $(RPMSPEC)

# compile the build, which we do by executing only the %build stage, which
# runs configure as the first step.
rpm-build:
	rpmbuild --noprep -bc --short-circuit $(RPMBUILD_FLAGS) $(RPMSPEC)

# install the build, which we do by executing only the %install stage, which
# also builds the actual rpms
rpm-install: 
	rpmbuild -bi --short-circuit $(RPMBUILD_FLAGS) $(RPMSPEC)

# After distdir is done, all we have is an empty subdirectory
# populated from the *_DIST variables used by Automake. RPM and Deb
# naming conventions are similar, but just different enough that the
# source directory and tarball names are subtely different, namely
# Debian uses a '~' character in their version names, which rpmbuild
# doesn't like, so for an RPM we convert it to a '_' instead. Then we
# have to rename the subdirectory to match the new version of the
# snapshot, and edit the configure* files to have the proper version
# name.
# Unlike creating a deb, which build their own source tarball, rpm
# requires we do it ourselves, and copy it to $HOME/rpmbuild/SOURCES
# before rpmbuild will work.
rpm-setup: spec dist
	$(MKDIR_P) $(RPMBUILD_DIR)/BUILD
	$(MKDIR_P) $(RPMBUILD_DIR)/BUILDROOT
	$(MKDIR_P) $(RPMBUILD_DIR)/RPM
	$(MKDIR_P) $(RPMBUILD_DIR)/SRPMS
	$(MKDIR_P) $(RPMBUILD_DIR)/SOURCES
	$(MKDIR_P) $(RPMBUILD_DIR)/SPECS;
	cp $(distdir).tar.gz $(RPMBUILD_DIR)/SOURCES/

.PHONY : rpm distdir redhat spec rpm-configure rpm-install rpm-build setup-rpm
